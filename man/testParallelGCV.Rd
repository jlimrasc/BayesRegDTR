% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TestParallelGCV.R
\name{testParallelGCV}
\alias{testParallelGCV}
\title{Title}
\usage{
testParallelGCV(
  Dat,
  n,
  n.train,
  num_stages,
  num_treats,
  p_list,
  t,
  R = 30,
  numCores,
  tau = 0.01,
  B,
  nu0 = 3,
  V0 = mapply(diag, p_list, SIMPLIFY = FALSE),
  alph,
  gam
)
}
\arguments{
\item{Dat}{Data in format returned by \code{generate_dataset_mvt}:
organised as a list of {y, X, A} where y is a vector of the final outcomes,
X is a list of matrices of the intermediate covariates and A is a matrix of
the assigned treatments}

\item{n}{Number of samples/individuals}

\item{n.train}{Train model using MC Draws from 1:n.train}

\item{num_stages}{Total number of stages per individual}

\item{num_treats}{Vector of number of treatment options at each stage}

\item{p_list}{Vector of dimension for each stage}

\item{t}{Prediction stage t, where \eqn{\leq}{<=} num_stages}

\item{R}{Draw size. default = 30}

\item{numCores}{Number of cores in the system to use. default uses parallel::detectCores()}

\item{tau}{Prior precision scale. Should be specified with a small value. default = 0.01}

\item{B}{Number of MC draws}

\item{nu0}{Inverse-Wishart degres of freedom. default: 3}

\item{V0}{Inverse-Wishart scale matrix. default: diagonalisation of p_list}

\item{alph}{???}

\item{gam}{???}
}
\value{
list of {GCV_results, freqs} where GCV_results is an array of size
n-n.train x p_list\link{t} x B, and freqs is a n-n.train x p_list\link{t} matrix
of the frequency of each treatment type at stage t
}
\description{
Title
}
\examples{
# -----------------------------
# Initialise Inputs
# -----------------------------
num_stages  <- 3
p_list      <- rep(2, num_stages)
num_treats  <- rep(2, num_stages)
n           <- 1000
n.train     <- 500

tau     <- 0.01
B       <- 5
alph    <- 3
gam     <- 4
nu0     <- 3
V0      <- mapply(diag, p_list, SIMPLIFY = FALSE)
R       <- 30
numCores<- parallel::detectCores()

# -----------------------------
# Generate Dataset
# -----------------------------
Dat <- generate_dataset_mvt(n, num_stages, p_list, num_treats)

# -----------------------------
# Main
# -----------------------------
gcv_res <- TestParallelGCV(Dat, n, n.train, num_stages, p_list, t, R, numCores,
                           tau, B, nu0, V0, alph, gam)
}
