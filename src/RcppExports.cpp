// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// draw_Wt_b_cpp
Rcpp::List draw_Wt_b_cpp(const arma::mat& omegat_inv, const arma::mat& Mnt, const double tau, std::vector<arma::mat>& sigmatb, const int pt, const int qt, const int B);
RcppExport SEXP _BayesRegDTR_draw_Wt_b_cpp(SEXP omegat_invSEXP, SEXP MntSEXP, SEXP tauSEXP, SEXP sigmatbSEXP, SEXP ptSEXP, SEXP qtSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type omegat_inv(omegat_invSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mnt(MntSEXP);
    Rcpp::traits::input_parameter< const double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< std::vector<arma::mat>& >::type sigmatb(sigmatbSEXP);
    Rcpp::traits::input_parameter< const int >::type pt(ptSEXP);
    Rcpp::traits::input_parameter< const int >::type qt(qtSEXP);
    Rcpp::traits::input_parameter< const int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(draw_Wt_b_cpp(omegat_inv, Mnt, tau, sigmatb, pt, qt, B));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BayesRegDTR_draw_Wt_b_cpp", (DL_FUNC) &_BayesRegDTR_draw_Wt_b_cpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_BayesRegDTR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
